services:
  db:
    image: postgres:15
    container_name: my-postgres-db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: hexagonal_db
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  rabbitmq:
    image: rabbitmq:3-management
    container_name: my-rabbitmq
    environment:
      RABBITMQ_DEFAULT_HOST: rabbitmq
      RABBITMQ_DEFAULT_USER: admin
      RABBITMQ_DEFAULT_PASS: admin
    ports:
      - "5672:5672"
      - "15672:15672"
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 20s

  app:
    build: .
    container_name: my-fastapi-app
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/hexagonal_db
      - RABBITMQ_URL=amqp://admin:admin@rabbitmq:5672/
      - RABBITMQ_HOST=rabbitmq
      - RABBITMQ_USER=admin
      - RABBITMQ_PASS=admin
    depends_on:
      db:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    restart: on-failure

  worker:
    build: .
    container_name: my-command-worker
    command: python -m src.worker.main
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/hexagonal_db
      - RABBITMQ_URL=amqp://admin:admin@rabbitmq:5672/
      - RABBITMQ_HOST=rabbitmq
      - RABBITMQ_USER=admin
      - RABBITMQ_PASS=admin
      - PYTHONUNBUFFERED=1
    depends_on:
      db:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    restart: on-failure

volumes:
  postgres_data:
